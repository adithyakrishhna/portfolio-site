---
import { Icon } from "astro-icon";
import ThemeSwitcher from "~/components/theme-switcher.astro";
import type { NavItem } from "~/types";
import ThemeSwitcherMobile from "./theme-switcher-mobile.astro";

const navItems: Array<NavItem> = [
  { title: "About", url: "#about"},
  { title: "Skills", url: "#skills" },
  { title: "Projects", url: "#projects" },
  { title: "Contact", url: "#contact" },
];
---

<header
  id="page-header"
  class="absolute bottom-0 z-20 flex w-full items-center justify-between border-b border-transparent px-8 py-4 text-white"
>
  <a class="flex items-center gap-3 hover:!text-default" href="#" aria-label="Back to Home">
    
    <img class="h-12 w-12"  src="/Adithya-Krishna-sitelogo.svg" alt="Adithya Krishna Site-logo">
    
  </a>
  <div>
    <div class="flex items-center gap-6">
      <ThemeSwitcherMobile />
      <nav class="hidden sm:block">
        <ul class="flex items-center gap-6">
          {
            navItems.map(({ title, url }) => (
              <li>
                <a class="text-sm" href={url}>
                  {title}
                </a>
              </li>
            ))
          }
        </ul>
      </nav>
      <button
        id="open-nav-button"
        type="button"
        class="btn sm:hidden"
        aria-label="Navigation"
      >
        <Icon pack="mdi" name="menu" class="h-8" />
      </button>
      <ThemeSwitcher />
    </div>
    <div id="menu-modal" class="modal hidden" aria-hidden="true">
      <div class="fixed border-b-2 border-gray-600 shadow-lg inset-0 backdrop-blur-lg bg-default h-fit px-8 py-4 text-default rounded-b-2xl">
        <div class="space-y-4 pb-8" role="dialog" aria-modal="true">
          <header class="text-right">
            <button
              id="close-nav-button"
              type="button"
              class="btn border-none mt-1"
              aria-label="Close navigation"
            >
              <Icon pack="mdi" name="close" class="h-8" />
            </button>
          </header>
          <div class="flex justify-center">
            <a href="/">
              <div>
                <img class="h-20 w-20"  src="/A_icon.svg" alt="site icon">
              </div>
            </a>
          </div>
          <nav>
            <ul class="flex flex-col items-center gap-3">
              {
                navItems.map(({ title, url }) => (
                  <li>
                      <a class="rounded-lg flex items-center justify-center w-48 gap-3 border-2 border-current px-6 py-4 text-center text-xl" href={url}>
                        {title}
                      </a>
                  </li>
                ))
              }
            </ul>
          </nav>
        </div>
      </div>
    </div>
  </div>
</header>

<script>
  import MicroModal from "micromodal";
  import invariant from "tiny-invariant";

  const menuModalId = "menu-modal";

  const header = document.querySelector("#page-header") as HTMLElement;
  const page = document.documentElement;
  const menu = document.querySelector(`#${menuModalId} ul`);
  const openNavButton = document.querySelector("#open-nav-button");
  const closeNavButton = document.querySelector("#close-nav-button");

  invariant(header, "header should not be null");
  invariant(menu, "menu should not be null");
  invariant(openNavButton, "openNavButton should not be null");
  invariant(closeNavButton, "closeNavButton should not be null");

  const openMenu = () => {
    MicroModal.show(menuModalId, { disableScroll: true });
  };

  const closeMenu = () => {
    MicroModal.close(menuModalId);
  };

  openNavButton.addEventListener("click", openMenu);
  closeNavButton.addEventListener("click", closeMenu);

  document.addEventListener("scroll", () => {
    const d = page.clientHeight - page.scrollTop - header.offsetHeight;
    header.classList.toggle("fixed-header", d < 0);
  });

  menu.addEventListener("click", (event) => {
    if ((event.target as HTMLElement).tagName === "A") {
      closeMenu();
    }
  });
</script>

<noscript>
  <style>
    #open-nav-button {
      display: none;
    }
  </style>
</noscript>

<style>
  .fixed-header {
    @apply fixed top-0 bottom-auto;
    @apply border-default bg-default text-default;
  }
  .modal.is-open {
    @apply block;
  }
</style>
